<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Chromebook | Zhu Yong]]></title>
  <link href="http://zhuyong.me/blog/categories/chromebook/atom.xml" rel="self"/>
  <link href="http://zhuyong.me/"/>
  <updated>2014-01-29T13:38:00+08:00</updated>
  <id>http://zhuyong.me/</id>
  <author>
    <name><![CDATA[Zhu Yong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Turn C720 Into Development Machine: Step by Step Guide]]></title>
    <link href="http://zhuyong.me/blog/2014/01/22/turn-c720-into-development-machine-step-by-step-guide/"/>
    <updated>2014-01-22T22:52:54+08:00</updated>
    <id>http://zhuyong.me/blog/2014/01/22/turn-c720-into-development-machine-step-by-step-guide</id>
    <content type="html"><![CDATA[<p>From Google Analytic report of my blog,  I saw there are two visitors, one from Germany and the other from US. Both of them viewed my blog post about <a href="http://zhuyong.me/blog/2014/01/08/setup-acer-c720-chromebook-as-development-computer/">setup C720 development environment</a>.  But in that post, I didn&rsquo;t record down step by step how to setup the development environment. Since people are interested in this topic, I think I should write a formal and detail post about this. So, here come this step by step guide of turn your C720 as development machine by install Ubuntu using <a href="https://github.com/dnschneid/crouton">crouton</a>.</p>

<p>The reason I choose <code>crouton</code> over <code>chrubuntu</code> is because of the super convenient way to switch between ChromeOS and Ubuntu with <code>Ctrl + Alt + Shift + Back</code> keys. There is no need to reboot machine to switch between the OSs.</p>

<h4>Step 1: Enable Developer Mode</h4>

<p>Enable the developer mode will wipe all your data, so backup any important data before enable developer mode.</p>

<p>To enable developer mode:</p>

<ul>
<li>Press <code>Esc + Refresh (F3)</code> keys then press <code>Power</code> button</li>
<li>Press <code>Ctrl + D</code>, ignore the warning/error message on screen.</li>
<li>Press <code>Ctrl + D</code> again, you entered the developer mode.</li>
</ul>


<p>After enable developer mode, evertime you cold start your computer, you need to press <code>Ctr + D</code> or just wait for 30 second.</p>

<h4>Step 2: Install Ubuntu 13.10 Using crouton</h4>

<p><code>crouton</code> is a powerful script that will do all the download and installation job for you. Download latest version of <code>crouton</code> from <a href="http://goo.gl/fd3zc">http://goo.gl/fd3zc</a>. For details of crouton usage, refer to it&rsquo;s <a href="https://github.com/dnschneid/crouton">github repo</a>.</p>

<p>I use <code>crouton</code> to install Ubuntu 13.10, and I choose <code>xfce4</code> as the windows manager. Below are the steps I prerformed:</p>

<ul>
<li>Download <code>crouton</code></li>
<li>Open shell by <code>Ctrl + Alt + T</code>, then type <code>shell</code></li>
<li>Run <code>sudo sh -e ~/Downloads/crouton -r saucy -t xfce</code>. This will start the downloading and installation process for Ubuntu 13.10</li>
<li>Wait untill the installation done.</li>
<li>Run <code>sudo startxfce4</code> to start the <code>Xfce</code></li>
<li>Anytime you want to switch between ChromeOs and Ubuntu, just use <code>Ctrl + Alt + Shift + Back</code> or <code>Ctrl + Alt + Shift + Forward</code></li>
<li>log out <code>xfce</code> will end the <code>xfce</code> session</li>
</ul>


<h4>Step 3: Install Development Tools</h4>

<p>There is no much to talk about this step, it&rsquo;s the same as install development tools in Ubuntu. Just run <code>sudo apt-get update</code>, <code>sudo apt-get install</code> to install whatever tools you needed.</p>

<p>For me, I installed <code>git</code>, <code>vim</code>, <code>build_essential</code>, <code>cmake</code>, <code>golang1.2</code>, <code>llvm3.4</code>, <code>the_silver_searcher</code> as well as <code>ruby</code> and necessory packages for <code>Octopress</code>.</p>

<p>If you followed all the steps above, your C720 will become a nice Linux development machine. I haven&rsquo;t tried to run any IDE like <code>eclipse</code> or <code>android studio</code>, I think my 2GB RAM may not sufficient for RAM hunger tools like that. If you have the 4GB version of C720, I think there is no problem to run those IDEs.</p>

<h4>Step 4: Key Map Modification (Optional)</h4>

<p>If you are like me, always use <code>CapLock</code> as <code>Ctrl</code>, you can follow the instruction in my another <a href="http://zhuyong.me/blog/2014/01/15/map-search-key-to-control-key-on-acer-c720-chromebook/">post</a> to map the search key to ctrl.</p>

<p><strong>Next</strong>, I will write another post to talk about development on C720 using cloud based development environment. If you are interested, please stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Map Search Key to Control Key on Acer C720 Chromebook]]></title>
    <link href="http://zhuyong.me/blog/2014/01/15/map-search-key-to-control-key-on-acer-c720-chromebook/"/>
    <updated>2014-01-15T20:00:46+08:00</updated>
    <id>http://zhuyong.me/blog/2014/01/15/map-search-key-to-control-key-on-acer-c720-chromebook</id>
    <content type="html"><![CDATA[<p>I am a vim user, and for all my home and office computers, I map the CapLock key to Ctrl key. So after installed Ubuntu 13.10 using crouton on my new Acer C720 Chromebook, I was thinking to map the search key to control key. I did some search online as well as some experiments and finally found the solution.</p>

<p>I choosed xfce4 as my window manager because of the rather low 2GB RAM. By default, the search key is mapped to Super_L after install Ubuntu using crouton. If you want to know the keycode for each key on the keyboard, you can use <code>xev</code> to check.</p>

<p>I use <code>xmodmap</code> to do the key mapping.</p>

<p>First, create file <code>.Xmodmap</code> at your <code>$HOME</code> directory with content below</p>

<pre><code>clear control
clear mod4
keycode 133 = Super_L
add control  = Control_L Control_R Super_L
add mod4 = Hyper_L Super_R
</code></pre>

<p>Next, need to make sure <code>xmodmap</code> load <code>~/.Xmodmap</code> file when you start you linux using <code>sudo startxfce4</code> in chromebook terminal. Create file <code>~/.xinitrc</code> with content below</p>

<pre><code>if [-s ~/.Xmodmap]; then
    xmodmap ~/.Xmodmap
fi
</code></pre>

<p>Last step is to logout your xfce environment and restart it from chromebook terminal.</p>

<h4>References Websites</h4>

<ul>
<li><a href="http://cs.gmu.edu/~sean/stuff/n800/keyboard/old.html">http://cs.gmu.edu/~sean/stuff/n800/keyboard/old.html</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Xmodmap">https://wiki.archlinux.org/index.php/Xmodmap</a></li>
<li><a href="https://github.com/dnschneid/crouton/wiki/Keyboard">https://github.com/dnschneid/crouton/wiki/Keyboard</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Acer C720 Chromebook as Development Computer]]></title>
    <link href="http://zhuyong.me/blog/2014/01/08/setup-acer-c720-chromebook-as-development-computer/"/>
    <updated>2014-01-08T22:27:33+08:00</updated>
    <id>http://zhuyong.me/blog/2014/01/08/setup-acer-c720-chromebook-as-development-computer</id>
    <content type="html"><![CDATA[<p>Today is my second day with Acer C720 chromebook. After two days usage, my impression on chromebook is totally impressive. My initial intension was to buy a Macbook Pro 13 retina display. But while waiting for the Apple &ldquo;Red Friday&rdquo; discount before Chinese New Year, I was thinking again and again &ldquo;do I really need to buy a powerful Macbook Pro that cost over S$2000?&rdquo;</p>

<p>I have a powerful laptop at home now, but because of its bad battery life, everytime I use it, I need to plug in the power adapter. I can only use laptop after the two kids went to sleep, and I want to use it when on the bed.  The requirement to connect to power adapter just keep me away from use that laptop. What I need is a device with very good battery life and meet the requirements below:</p>

<ul>
<li>Battery must be last at least 5-7 hours</li>
<li>Must have keyboard, one of the main task of this device is for me to write blog or code on bed before sleep.</li>
<li>Can run vim, I use it as my primary code editor</li>
<li>x86 CPU, no need to be very powerful</li>
<li>Hard disc space no hard requirement, as long as there are few GB left for me to install some development tools</li>
<li>Memory at least 4GB</li>
</ul>


<p>Acer C720 meet all requirement except the 4GB RAM, it&rsquo;s because 4GB version is out of stock on Amazon. And because of Singapore telco Starthub promotion, someone was selling cheap of C720 after they got this as free when sign broadband contract with Starhub. So I just contact one guy in a forum and offer S$300 for this 2GB version C720.</p>

<p>I got it yesterday after work. After dinner, I started the process to install Ubuntu 13.10 using crouton. The process was very smooth. Below are what I have done to setup my chromebook.</p>

<ul>
<li>enable developer mode</li>
<li>install Ubuntu 13.10 using crouton</li>
<li>install vim, git, build_essential, cmake, golang1.2, llvm3.4</li>
<li>build the_silver_searcher, YouCompletme for vim</li>
<li>install ruby and necessary setup for blog system Octopress</li>
</ul>


<p>After all of those setup, I still have over 7GB space left, that&rsquo;s far better than my expection. My overall experience on this chromebook is excellet. But if there are other choices of chrombook available, I would want a configuration with 4GB RAM, 32GB SSD. Current 2GB RAM is just not enough for serious development.</p>
]]></content>
  </entry>
  
</feed>
