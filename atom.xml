<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Zhu Yong]]></title>
  <link href="http://zhuyong.me/atom.xml" rel="self"/>
  <link href="http://zhuyong.me/"/>
  <updated>2015-11-08T18:09:02+08:00</updated>
  <id>http://zhuyong.me/</id>
  <author>
    <name><![CDATA[Zhu Yong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ordered My First Car]]></title>
    <link href="http://zhuyong.me/blog/2015/11/08/ordered-my-first-car/"/>
    <updated>2015-11-08T17:47:12+08:00</updated>
    <id>http://zhuyong.me/blog/2015/11/08/ordered-my-first-car</id>
    <content type="html"><![CDATA[<p>This weekend, just after I received my official driving license, I ordered my first car &ndash; Citroen Grand C4 Picasso.</p>

<p>The reasons I chose Grand C4 Picasso are simple:</p>

<ol>
<li><p>I need MPV car, we have 6 family members, 5 seaters car not enough.</p></li>
<li><p>For MPV, I shortlisted Honda Stream, Toyota Wish and this Grand C4 Picasso. In Singapore Honda and Toyota cars are people&rsquo;s Number 1 choice because the high reliability and relatively low maintenance cost. If the car dealer still carry Honda Stream, I might go for that car. As for Toyota Wish, it&rsquo;s a quite old model, no change since 2009. As for Grand C4 Picasso, this is a new model, fuel efficient, and the dealer provide 5 years warranty + 5 years free service. Most importantly, I like both the interior and exterior of this car.</p></li>
</ol>


<p><img src="http://zhuyong.me/images/blogimg/2015-11-08-Car/GC4P.jpg" title="&#34;Citroen Grand C4 Picasso&#34;" alt="&#34;Citroen Grand C4 Picasso&#34;"></p>

<p>Now I just need to wait for the deal to big the COE, settle car loan and inssurance, then I can collect my car. Sadly, that&rsquo;s at least 2-3 weeks waiting time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Got My SG50 Driving License]]></title>
    <link href="http://zhuyong.me/blog/2015/11/06/got-my-sg50-driving-license/"/>
    <updated>2015-11-06T21:46:06+08:00</updated>
    <id>http://zhuyong.me/blog/2015/11/06/got-my-sg50-driving-license</id>
    <content type="html"><![CDATA[<p>I passed my driving test at ComfortDelGro Driving Center on 29 Oct 2015 with only 1 attempt. And I received my offcial driving license card delivered on 5 Nov 2015, I didn&rsquo;t expect to get the card so fast, with only 1 week waiting time.</p>

<p>UBI driving center is the one with lowest passing rate among all 3 driving school in Singapore. I engaged a private driving instructor because of its flexibility and the relatively lower cost.</p>

<p>To pass the driving test, here are some tips based on my experience:</p>

<p>First, for each learning session on road, try to train yourself the judgement for speed and distance, especially those car coming from behind on the lane you are going to change to. Don&rsquo;t be rush or panic for lane change fail, it&rsquo;s learning session, safety is alway first.</p>

<p>Second, be familiar with the road and the circuit. You can find CDC circuit with Google search. For the road, I use Google <a href="https://play.google.com/store/apps/details?id=com.google.android.maps.mytracks&amp;hl=en"><code>My Tracks</code></a> app to track my learning session, then use Google Street View to go through the road whenever I need. Below is screen capture from my handphone.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-11-06-Driving/mytrack_01.png" title="&#34;Google My Track&#34;" alt="&#34;Google My Track&#34;">
<img src="http://zhuyong.me/images/blogimg/2015-11-06-Driving/mytrack_02.png" title="&#34;Google My Track&#34;" alt="&#34;Google My Track&#34;"></p>

<p>Third, try to book your test at off-peak time to avoid heavy traffic.</p>

<p>Forth, on actual test day, must must be confident, be calm, treat it same as normal learn session.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Config Logitech Performance MX Zoom Button in Ubuntu]]></title>
    <link href="http://zhuyong.me/blog/2015/11/05/config-logitech-performance-mx-zoom-button-in-ubuntu/"/>
    <updated>2015-11-05T13:42:07+08:00</updated>
    <id>http://zhuyong.me/blog/2015/11/05/config-logitech-performance-mx-zoom-button-in-ubuntu</id>
    <content type="html"><![CDATA[<p>The middle button (click wheel) on Logitech Performance MX is very very difficult to press. So I changed the <code>Zoom</code> button to middle button on windows system. To do same setting under Ubuntu, follow the instructions below:</p>

<ul>
<li>Install necessary software packages</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   sudo apt-get install xbindkeys xautomation xev</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Next, use <code>xev</code> to find the button number for <code>Zoom</code> button. Just run <code>xev</code> from command line, then click <code>Zoom</code> button when your cursor is in the small white window. You will see somthing like below:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ButtonPress event, serial 45, synthetic NO, window 0x2400001,
</span><span class='line'>    root 0x24d, subw 0x0, time 3735892633, (75,111), root:(301,192),
</span><span class='line'>    state 0x0, button 2, same_screen YES
</span><span class='line'>
</span><span class='line'>ButtonRelease event, serial 45, synthetic NO, window 0x2400001,
</span><span class='line'>    root 0x24d, subw 0x0, time 3735892633, (75,111), root:(301,192),
</span><span class='line'>    state 0x200, button 2, same_screen YES</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create default <code>xbindkeys</code> config file with command:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>   xbindkeys --defaults &gt; ~/.xbindkeysrc</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Open file <code>~/.xbindkeysrc</code> to add the following lines at end of the file:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"xte 'mouseclick 2'"
</span><span class='line'>b:13+Release</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Re-Hacked YouCompleteMe to Support Lamely Structured Projects]]></title>
    <link href="http://zhuyong.me/blog/2015/02/01/hacked-youcompleteme-to-support-lamely-structured-pojects/"/>
    <updated>2015-02-01T09:05:06+08:00</updated>
    <id>http://zhuyong.me/blog/2015/02/01/hacked-youcompleteme-to-support-lamely-structured-pojects</id>
    <content type="html"><![CDATA[<p>Nearly 1 Year ago, I attempted to hack <code>YouCompleteMe</code> for clang code completion for a lamely structured project, that hacking worked, but the hacking was dirty. For background information, <a href="http://stackoverflow.com/questions/21746668/configure-vim-youcompleteme-for-special-project-structure">here</a> is my origin question on StackOverflow and <a href="http://zhuyong.me/blog/2014/02/20/hack-youcompleteme-and-libclang-for-lamely-structured-project/">here</a> is the detail about my first dirty hack.</p>

<p>Recently when I looked at this hacking again, I thought there should be a better way, especially after I found <a href="https://gist.github.com/Rip-Rip/758615">this code snippet</a> from GitHub Gist. At the moment I saw the code, I had a strong feeling that I have found the solution, I just need to verify it. To make code completion success for <code>clang -cc1 -fsyntack-only -code-complete-at a.c:4:11 main.c</code>, the source file to create <code>CXTranslationUnit</code> should be <code>main.c</code> and the source file to do <code>clang_codeCompleteAt</code> should be <code>a.c</code>. So I modified the code to pass one additional command line argument to be the file to create <code>TransicationUnit</code>, then compile and run command:</p>

<pre><code>$ ./complete a.c 11 4 main.c
</code></pre>

<p>When I saw the output, I confirmed this was a better way to hack <code>YouCompleteMe</code> for my need.</p>

<p>Now I found the correct direction, the rest was just spend time to code, test and debug, here is a summary for what I have modified:</p>

<ul>
<li>File <code>cpp/ycm/ClangCompleter/TransicationUnit.cpp</code>, function <code>TranslationUnit::CandidatesForLocation</code>, take additional parameter <code>compfile</code> to pass to <code>clang_codeCompleteAt</code></li>
<li>File <code>cpp/ycm/ClangCompleter/CodeCompleter.cpp</code>, function <code>ClangCompleter::CandidatesForLocationInFile</code>, take additional parameter <code>compfile</code> and pass this newly added parameter to <code>unit-&gt;CandidatesForLocation</code></li>
<li>File <code>ycmd/completers/cpp/clang_completer.py</code>, function <code>ComputeCandidatesInner</code>, follow the way <code>_FlagsForRequest</code> is implemented, add new function to get the <code>parent</code> source file to create <code>TransicationUnit</code> and pass that result to <code>CandidatesForLocationInFile</code></li>
<li>File <code>ycmd/completers/cpp/flags.py</code>, add the new function to get <code>parent</code> source file</li>
<li>File <code>.ycm_extra_conf.py</code> under project source directory, add function <code>ParentForFile</code>, this function read input <code>.clang_input_file</code>, which is the mapping for <strong>code-complete-at-file</strong> to <strong>TransicationUnit-file</strong></li>
<li>Created a python script to generate the mapping file for <strong>code-complete-at-file</strong> to <strong>TransicationUnit-file</strong></li>
</ul>


<p>Comparing to my first hacking, this round is very clean, only clang related part on <code>ycmd</code> is modified, the client side remain untouched.</p>

<p>I have checked in the modifications to <a href="https://github.com/yongzhy/ycmd">my fork of <code>ycmd</code></a> at branch <code>lamely</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HDB BTO Home Network DIY]]></title>
    <link href="http://zhuyong.me/blog/2015/01/06/hdb-bto-home-network-diy/"/>
    <updated>2015-01-06T12:20:40+08:00</updated>
    <id>http://zhuyong.me/blog/2015/01/06/hdb-bto-home-network-diy</id>
    <content type="html"><![CDATA[<p>Inspired by <a href="https://absolutehonesty.wordpress.com/2014/05/31/hougang-parkview-i-want-my-internet/">this blog</a>, I decided to DIY the network thing for my new HDB flat when I was shopping on Taobao in Nov. Followed the suggestion in that blog, I bought all necessary items from Taobao, but the network modules I bought are Cat 6 module, not 5E.</p>

<p>On Jan 03, my contractor went to my new HDB flat to install the lights we bought from Taobao, while they doing the lights installation, I was doing DIY job to change all RJ11 phone jacks to network RJ45 jacks.</p>

<p>Below are the tools I used for this DIY job.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-000.jpg"></p>

<p>Start from bedrooms, change the RJ11 to RJ45 one by one.</p>

<!-- more -->


<p></p>

<p>This picture is the original RJ11 panel.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-001.jpg"></p>

<p>Take off the cover from the panel.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-002.jpg"></p>

<p>Loosen the screws on the panel. The cable inside is already Cat 6 network cable. So I just need to change the modules and panels.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-003.jpg"></p>

<p>Put the color wires into each slot on the network module. Use pattern B</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-004.jpg"></p>

<p>Cut off the extra wires, put on the back cover.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-005.jpg"></p>

<p>Insert module into the panel.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-006.jpg"></p>

<p>Use back the origin screws to fasten the panel.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-007.jpg"></p>

<p>After all three bedrooms and the bomb shelter (Yes, I changed the module and panel in bomb shelter as well). The next job is tougher, I need to do add modules to all terminal in the power box behind the main gate.</p>

<p>This is the original lines.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-008.jpg"></p>

<p>After I connect the modules to all lines.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-009.jpg"></p>

<p>This is the final work.</p>

<p><img src="http://zhuyong.me/images/blogimg/2015-01-06-network/network-010.jpg"></p>

<p>The whole process was not difficult, just need to be careful to match the color lines with the pattern on the modules.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[T32Hook: Utility to Auto Hook Trace32]]></title>
    <link href="http://zhuyong.me/blog/2014/12/31/t32hook-utility-to-auto-hook-trace32/"/>
    <updated>2014-12-31T15:12:54+08:00</updated>
    <id>http://zhuyong.me/blog/2014/12/31/t32hook-utility-to-auto-hook-trace32</id>
    <content type="html"><![CDATA[<p>Today is last day of 2014. I will use this 2014 last blog to write about the utility I recently developed.</p>

<p>On my latest project, firmware code failed during test with power cycle on target. And the Lauterbach emulator can&rsquo;t detect the <code>power on</code> event on this target, so we can&rsquo;t use the <code>power on</code> event to automate initial script running. The failure only happens after power cycle, so I must let Trace32 run the setup script to enable the trace in order to capture the code running history.</p>

<p>Because previously I already did a utility to automate failure replay using Trace32 simulation, I know Trace32 has remote API to control the script running. So I come out with the idea to detect target power cycle from the message on serial port (target firmware will print some message on serial port), upon power cycle event happen, use remote API to command Trace32 to execute the setup script.</p>

<p>QT already has the <code>The Simple Terminal</code> example, so my development leverage on this example code and added Trace32 remote API code.</p>

<p>This is the image of the main window for the final working product.</p>

<p><img src="http://zhuyong.me/images/blogimg/2014-12-31-t32hook/t32hook-001.png"></p>

<!-- more -->


<p>This the serial setting dialog, I didn&rsquo;t change this part from the example code.</p>

<p><img src="http://zhuyong.me/images/blogimg/2014-12-31-t32hook/t32hook-002.png"></p>

<p>This is the Trace32 remote setting dialog. Added options to specify the remote host, port, packet size, the setup script to run as well as text line to trigger setup script re-run.</p>

<p><img src="http://zhuyong.me/images/blogimg/2014-12-31-t32hook/t32hook-003.png"></p>

<p>The whole development take me few night time at home. My initial working version with everything hard coded, because we must solve the firmware issue ASAP. I use my spare time to make it configurable, so my colleagues with same need can use it as well.</p>

<p>This is not my first utility written using QT, when I need to write GUI utility, I will always turn to QT, sometime use PyQT, sometime use the native C++ version. The latest version of QT already have support for Android and iOS, I may test water with the Android version some time later.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014 Year End Summary]]></title>
    <link href="http://zhuyong.me/blog/2014/12/29/2014-year-end-summary/"/>
    <updated>2014-12-29T17:39:25+08:00</updated>
    <id>http://zhuyong.me/blog/2014/12/29/2014-year-end-summary</id>
    <content type="html"><![CDATA[<p>It&rsquo;s end of Year 2014 and it&rsquo;s the time to write summary for this year. Year 2014 is just an ordinary year same as previous few years, the main reason is there were no much excited things happen. There were several good opportunities for me to change, but unfortunately, I didn&rsquo;t prepare myself well and I missed all those opportunities. I really think developer should be already be ready for opportunities, you never know when will an opportunity appears.</p>

<p>Anyway, to summarize my Year 2014, I grouped those things that worth mention here into few categories:</p>

<h3>Big Change</h3>

<p>There is only one thing can fit this category in 2014. On 31 July, I received email from HDB to inform us that we got queue No. 1 in HDB May 2014 sale of balance flats exercise. So I chose a new HDB 5 room flat from Costa Ris @ Pasir Ris, the location is good, very near to MRT station. My current flat location is also very good, 5 minutes walking distance to Boon Lay MRT, we decided to move to east side for better air quality and more places for kids to play. In the past two months, I was busy with new flat renovation. Every weekend I travel from very west of Singapore to very east of Singapore to monitor the renovation progress. The renovation is still in progress and we plan to move in after Chinese New Year 2015.</p>

<h3>Gadgets Bought In Year 2014</h3>

<ul>
<li>Acer C720 ChromeBook : I have install Ubuntu on this Chromebook through crouton, for the whole year, this notebook was my main computer. I use ChromeOS to surf web and use Ubuntu to do development and blog writing. I really love this machine.</li>
<li>Chromecast from Google : Mainly used to play videos from YouTube for my kids.</li>
<li>Allure Eyewear: Call Of Duty Ghost : No use much after few months</li>
<li>HHKB Pro 2 Type-S : To me, the key feeling not so good as my old IBM Model S</li>
<li>LG G Pro 2 : Good Phablet, nice battery life</li>
<li>SandDisk Extreme Pro 480GB SSD : Good deal from Amazon and very good performance</li>
</ul>


<h3>Continuous / Ongoing Efforts</h3>

<ul>
<li>Answered some StackOverflow questions and earned few hundreds reputation points.</li>
<li>Bought a domain and start writing blog on GitHub page. The first blog post was on 11 Dec 2013 and total of 34 blog posts have been published. From <code>Google Analytics</code> report, now the blog has 800 page view per month, the number is not much, but I am glad that some of the posts did helped the readers.</li>
<li>Use <code>Google Keep</code> as my daily <code>ToDoList</code> since 21 Jan 2014, so far it works well for my needs. Every morning I create a new task list with the date in title, then copy previous day&rsquo;s incomplete task to this new list, and also add new tasks. Tasks may not be completed in sequence, or been listed for quite few days, but it&rsquo;s OK, as long as I know there is this task need to be done.</li>
<li>Use <code>Google Calendar</code> as my diary to record my two boys&#8217; remarkable event since 06 Dec 2013. I create one calendar for each boy, then share the calendars to my wife, both of us tried to update the calendars daily, so we won&rsquo;t miss any valuable moment with the two boys.</li>
</ul>


<h3>Books I Have Read in 2014</h3>

<ul>
<li>The Power of Habit: Why We Do What We Do in Life and Business</li>
<li>Steve Jobs (Chinese Version)</li>
<li>Just for Fun &ndash; Linus Torvalds (Chinese Version)</li>
<li>Among Thieves</li>
<li>Hunger Game I, II and III</li>
<li>Ender&rsquo;s Game</li>
<li>Harry Potter (All 7 Books, Chinese Version)</li>
</ul>


<h3>Development</h3>

<ul>
<li>Developed a simple 2048 clone in Golang, console version. <a href="https://github.com/yongzhy/2048-console">code here</a></li>
<li>Developed a QT GUI tool to re-init Trace32 after detected target power cycle from the messages printed on serial port.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HHKB Palm Rest Arrived]]></title>
    <link href="http://zhuyong.me/blog/2014/12/24/hhkb-palm-rest-arrived/"/>
    <updated>2014-12-24T09:18:53+08:00</updated>
    <id>http://zhuyong.me/blog/2014/12/24/hhkb-palm-rest-arrived</id>
    <content type="html"><![CDATA[<p>My HHKB palm rest from Taobao arrived last Saturday, and I brought it to office on Monday. After use if for two days, I am totally satisfied with it. The build quality is good, size is just nice for HHKB, well polished, and no strange smell. The logo was customized very good, exactly same as my requirement.</p>

<p><img src="http://zhuyong.me/images/blogimg/2014-12-24-HHKB-Palm-Rest/palm-rest.jpg"></p>

<p>Maybe I should do a free advertisement for this Taobao shop: <a href="http://item.taobao.com/item.htm?spm=a1z10.1.w4004-5284025914.3.hP74Q9&amp;id=40499617063">Taobao Shop</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgraded My HP DV6-6144TX to SSD + HDD]]></title>
    <link href="http://zhuyong.me/blog/2014/12/22/upgraded-my-hp-dv6-6144tx-to-ssd-plus-hdd/"/>
    <updated>2014-12-22T22:18:37+08:00</updated>
    <id>http://zhuyong.me/blog/2014/12/22/upgraded-my-hp-dv6-6144tx-to-ssd-plus-hdd</id>
    <content type="html"><![CDATA[<p>I received my Sandisk Extreme Pro 480GB SSD on 17 Dec, on that night, immediately after my kids slept, I went to study room and replaced the internal Toshiba SATA II HDD to this SSD. Next I partitioned the drive and installed Windows 7 Ultimate, the waiting time for Windows booting was significantly reduced.</p>

<p>Next on 18 Dec night, after I installed all drivers for Windows 7, I tried to install a Debian 7.7 system to another partition to make the computer dual boot. But I failed on first try, because non-free firmware required for the WIFI hardware, but the installer can&rsquo;t load firmware from the bootable USB drive. So I prepared another USB thumbdrive dedicated for the non-free firmware on 19 Dec night, this time the installation process went smoothly and I have Debian 7.7 and Windows 7 dual booting..</p>

<p>On 20 Dec, my shopping packages from Taobao were delivered, one of those packages is the SATA adapter to replace the DVD drive, this adapter only costed my RMB 27, which is very very cheap. On that night, I took out the DVD drive and replaced it with that adapter and the original Toshiba SATA II hard drive. So now my laptop has over 1TB hard drive capacity.</p>

<p>This is the image of Sandisk Extreme Pro 480GB SSD
<img src="http://zhuyong.me/images/blogimg/2014-12-22-ChangeDrive/sandisk.jpg"></p>

<p>The SATA adapter with Toshiba SATA II drive mounted
<img src="http://zhuyong.me/images/blogimg/2014-12-22-ChangeDrive/toshiba.jpg"></p>

<p>SSD and SATA adapter installed on the system. The adapter doesn&rsquo;t have the hole to mount screw at location 1, and its size is smaller than the original DVD drive, so it left some part un-covered at location 2. Considering the very cheap price, I am OK with the two not perfect point.
<img src="http://zhuyong.me/images/blogimg/2014-12-22-ChangeDrive/all.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ARM RVCT Tips: Armcc &amp;&amp; Fromelf]]></title>
    <link href="http://zhuyong.me/blog/2014/12/12/arm-rvct-tips-armcc-and-and-fromelf/"/>
    <updated>2014-12-12T15:54:19+08:00</updated>
    <id>http://zhuyong.me/blog/2014/12/12/arm-rvct-tips-armcc-and-and-fromelf</id>
    <content type="html"><![CDATA[<p>For embedded system C projects that share same code base, one common practice is to use various feature flags to encapsulate related code. This results difficulty in code reading, especially when you have huge amounts of feature flags, especially when flags&#8217; value depend on value of other flags. This is what I am dealing with in current project. And I found <code>armcc</code> and <code>fromelf</code> have some useful feature to help developer in such situation.</p>

<p>First, <code>armcc</code>, the compiler from ARM RVCT. Command line options are <code>--debug --debug_macros -E</code>, this will generate raw C file with all preprocessors been parsed, you can see how is a macro been defined.</p>

<ul>
<li><code>--debug</code> is to enable generate debug information</li>
<li><code>--debug_macros</code> is generate debug entry for macros. You can see the expanded macro in the generated C source code. <a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0491h/CIHHDEAA.html">doc here</a></li>
<li><code>-E</code> is to tell compiler not compile the C file, just excute the preprocess step. <a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0491h/CIHIDBBG.html">doc here</a></li>
</ul>


<p>Second, <code>fromelf</code>, imaging you have a complicated data structure defined, of which, some elements depends on some feature flags, to find out the difference between two different configurations, instead of load into debugger and compare, you can just use <code>fromelf</code> to dump the structure and use a diff tool to compare.</p>

<p>The command line is <code>fromelf --fieldoffsets --select=the_structure.* --output=the_structure.txt final.axf</code></p>

<ul>
<li><code>--fieldoffsets</code> produce offset for each structure elements. <a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0477i/BABJBGBH.html">doc here</a></li>
<li><code>--select=the_structure.*</code> to select the data structure to output</li>
<li><code>--output</code> to specify output file contain the listing</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DIY Cut My Sim Card to Micro-Sim]]></title>
    <link href="http://zhuyong.me/blog/2014/12/08/diy-cut-my-sim-card-to-micro-sim/"/>
    <updated>2014-12-08T16:31:49+08:00</updated>
    <id>http://zhuyong.me/blog/2014/12/08/diy-cut-my-sim-card-to-micro-sim</id>
    <content type="html"><![CDATA[<p>It has been weeks since I purchased my LG G Pro 2, but I haven&rsquo;t insert sim card into it yet. The reason is because my current sim card is the normal size sim card, but LG G Pro 2 needs micro-sim card. I checked with my Telco M1 customer service, they said they don&rsquo;t provide sim card cutting service, I must pay S$37 to get a micro-sim card. To me, this S$37 is too expensive, so I didn&rsquo;t buy from M1 and just use the new phone as a Tablet to surf net.</p>

<p>Last week during one day lunch time, I asked my coleagues where can I find sim card cutting service, one of my colleagues said he has a cutter but never used it before, so I asked him to bring the cutter to office. And he did it today, so I cut my sim card to micro-sim. With the cutter, the task was simple and easy. Attached a picture for the cutter and frame left from origin sim card.</p>

<p><img src="http://zhuyong.me/images/blogimg/2014-12-08-Simcard/2014-12-08-simcard.jpg" title="&#34;Cutter and remainning of normal sim card&#34;" alt="&#34;Cutter and remainning of normal sim card&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My #1 Earning Report From Amazon Affiliate]]></title>
    <link href="http://zhuyong.me/blog/2014/12/03/my-number-1-earning-report-from-amazon-affiliate/"/>
    <updated>2014-12-03T21:56:40+08:00</updated>
    <id>http://zhuyong.me/blog/2014/12/03/my-number-1-earning-report-from-amazon-affiliate</id>
    <content type="html"><![CDATA[<p>I can&rsquo;t remember when did I joined Amazon&rsquo;s affiliate program, and I can&rsquo;t remember I ever earned a single penny from this program. That&rsquo;s why I was so surprised and happy when I found out that I have earned over US$50 from Amazon during the Black Friday week. After checked Amazon&rsquo;s report, I know all those links were not from my blog, those are from the links I posted on Facebook and one online forum after I purchased <a href="http://www.amazon.com/gp/product/B00KHRYRLY/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00KHRYRLY&amp;linkCode=as2&amp;tag=zhuyong.me-20&amp;linkId=5VFWEDLJIRJOG7TM">SanDisk Extreme Pro 480GB SSD</a>. I shared the deal because I think it was a good deal, now I regret I didn&rsquo;t post to more forums. :)</p>

<p>From Amazon earning report page, I can trace back history up to few years, and I noticed that there are 5 clicks from this blog for Q1 2014, 2 clicks for Q2 2014 and 10 clicks for Q3 2014. None of the 17 clicks was converted to success purchase. I know this time I earn this US$50 is because of the shopping season, I don&rsquo;t know when could I make the second US$50 from Amazon.</p>

<p>To remember this little surprise, I have captured my Q4 earning to date.</p>

<p><img src="http://zhuyong.me/images/blogimg/2014-12-03-Amazon/amazon_report_2014_q4.png" title="&#34;Amazon Affiliate Earning Report 2014 Q4&#34;" alt="&#34;Amazon Affiliate Earning Report 2014 Q4&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crazy Shopping Month]]></title>
    <link href="http://zhuyong.me/blog/2014/11/27/crazy-shopping-month/"/>
    <updated>2014-11-27T22:41:50+08:00</updated>
    <id>http://zhuyong.me/blog/2014/11/27/crazy-shopping-month</id>
    <content type="html"><![CDATA[<p>This afternoon, I ordered another gadget from Amazon:
<a href="http://www.amazon.com/gp/product/B00KHRYRLY/ref=as_li_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B00KHRYRLY&linkCode=as2&tag=zhuyong.me-20&linkId=5VFWEDLJIRJOG7TM">SanDisk Extreme PRO 480GB SATA 6.0GB/s 2.5-Inch 7mm Height Solid State Drive (SSD) With 10-Year Warranty- SDSSDXPS-480G-G25</a><img src="http://ir-na.amazon-adsystem.com/e/ir?t=zhuyong.me-20&l=as2&o=1&a=B00KHRYRLY" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p><a href="http://www.amazon.com/gp/product/B00KHRYRLY/ref=as_li_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B00KHRYRLY&linkCode=as2&tag=zhuyong.me-20&linkId=5VFWEDLJIRJOG7TM"><img border="0" src="http://ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B00KHRYRLY&Format=_SL250_&ID=AsinImage&MarketPlace=US&ServiceVersion=20070822&WS=1&tag=zhuyong.me-20" ></a><img src="http://ir-na.amazon-adsystem.com/e/ir?t=zhuyong.me-20&l=as2&o=1&a=B00KHRYRLY" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>

<p>When I start sourcing good SSD deal on Amazon, I was initially looking at Intel 730 480GB, few days back, it was on discount price of US$199.99. Intel SSD has 5 Years international warranty, then I found this SandDisk SSD was selling with 10 Years warranty, someone online said the warranty was international, but I can&rsquo;t find clear statement. So I contacted Amazon customer service, after confirmed the warranty is international, I asked the customer service can Amazon match the price with other online store. At the time I contact customer service, this 480GB SSD was listed around US$250, the other online store has discount of US$204. The customer service told me Amazon won&rsquo;t honor any price match. So I think I&rsquo;d better wait till Friday to see if got big discount. Then to my surprise, 3 minutes later, when I refresh the page, Amazon changed the price to US$204. So I immediately placed the order, and 2 of my colleagues also placed order on this same item.</p>

<p>This month for me is really a crazy shopping month. I have spend a lot on several different online stores:</p>

<ul>
<li>Ordered over S$2000 products from TaoBao, most of the items are for my new BTO HDB house renovation. Some package has not been shipped. I think all those items can only be delivered to my new house around end of Dec.</li>
<li>Ordered HHKB from Amazon Japan</li>
<li>Ordered LG G Pro 2 at Singapore</li>
<li>Ordered new house kitchen sink tap from Amazon. My purchase was US$206, when 25 Nov I received the product, I found Amazon has dropped the price to US$158, so I contacted customer service to refund the price difference. They granted the refund on the spot.</li>
<li>Ordered this SanDisk 480GB SSD</li>
<li>Ordered XiaoMi Power Bank, still on the way</li>
<li>Ordered backup battery for my old LG HD 4x from Aliexpress. Still on the way</li>
</ul>


<p>Ordered so many items, spending so much in one month just for online shopping. I never done this before, so worth mark it here. :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HHKB Pro 2 Type-S After One Week]]></title>
    <link href="http://zhuyong.me/blog/2014/11/26/hhkb-pro-2-type-s-after-one-week/"/>
    <updated>2014-11-26T14:33:34+08:00</updated>
    <id>http://zhuyong.me/blog/2014/11/26/hhkb-pro-2-type-s-after-one-week</id>
    <content type="html"><![CDATA[<p>My HHKB Pro 2 Type-S was delivered to my house on 19 Nov, so till today, I have officially owned it one week. So I think it&rsquo;s time to write down my feeling about this well designed keyboard.</p>

<p>Before I purchase HHKB, I have being using old IBM Model M SSK for two years, the feel for IBM Model M is superb, it&rsquo;s just too noisy. I should say sorry to colleagues whose seats near me. My work platform is Windows, and I use  Total Commander as my primary file manager. So my short review for HHKB would based on my daily usage scenario, with comparison to Model M.</p>

<h3>Pros:</h3>

<ul>
<li>Size, the super compact size, I love it</li>
<li>Key layout, for people use Emacs and VIM as their editor. Now on every computer I own, I will map <code>Caps Lock</code> to <code>Ctrl</code>, I just feel it&rsquo;s so convenient compare to <code>Ctrl</code> at left bottom corner.</li>
<li>Quite, compare to my old IBM Model M, it&rsquo;s so quite.</li>
<li>USB Hub, I put my Logitech Performance MX receiver on one of the two USB port.</li>
<li>Configurable, and have <code>Windows</code> key, of course, this is advantage compare to old Model M.</li>
</ul>


<h3>Cons:</h3>

<ul>
<li>USB cable location. If the USB was at left or right side of HHKB, it could be much better.</li>
<li>No dedicated function key, and arrow key, not convenient for Windows user with Total Commander like me.</li>
<li>Key press feeling not good as IBM Model M, no &lsquo;Click&rsquo; feeling</li>
<li>Key layout, unless you have HHKB connected to all your desktop / laptop, you will keep press <code>\</code> on computer without HHKB.</li>
</ul>


<p>Here is a picture of my two beloved keyboards.</p>

<p><img src="http://zhuyong.me/images/blogimg/2014-11-26-HHKB/HHKB-001.jpg" title="&#34;HHKB and IBM Model M SSK&#34;" alt="&#34;HHKB and IBM Model M SSK&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finally, I Bought a HHKB Professional 2 Type-S]]></title>
    <link href="http://zhuyong.me/blog/2014/11/25/finally-hhkb-professional-type-s/"/>
    <updated>2014-11-25T08:49:10+08:00</updated>
    <id>http://zhuyong.me/blog/2014/11/25/finally-hhkb-professional-type-s</id>
    <content type="html"><![CDATA[<p>Same as many programmers using Emaces or VIM, I want to own a HHKB professional for real long time, and for the same reason not many people buy it: the price. This keyboard is really expensive when compare to other mechanical keyboard. But deep in my heart, I always want to own one. So this month when I want to replace my IBM model M SSK from workplace, I decided to buy a HHKB Professional 2 Type-s. Japanese Yen has being drop for a long period, so I think it&rsquo;s a good time to buy products from Japan.</p>

<p>I decided to buy from Japan <a href="http://www.amazon.co.jp/gp/product/B008GXT6SK?ref_=pe_492632_169829912_TE_M3T1_dp_1">Amazon</a>, then use <a href="http://www.jshoppers.com/forward/">JShoppers</a> to forward the package to Singapore. The process is straight forward. The reason I choose JShoppers is because of its cheaper price. The whole process is same as all other forwarding service company:</p>

<ol>
<li>Register at JShopers, you will get a unique shipping address.</li>
<li>Shopping on Amazon, shipping address use the address provided by JShoppers.</li>
<li>Wait for package to be delivered to JShoppers and they will send you an email to ask you to pay the forwarding fee.</li>
<li>Pay forwarding fee.</li>
<li>Wait for your package to be delivered to your door.</li>
</ol>


<p>My experience with JShopper this time was not very good, mainly because of the verification process. Only after my HHKB was shipped by Amazon then I realized JShoppers requires ID verification. But they didn&rsquo;t mention this in the registration page and the email after registration. Somehow, my account password was sent in plain text in the email. Which makes me think they store customers&#8217; password in plain text in database. This is a really bad practice, and I did express my concern about their online system security and possible leakage of my private information (including the uploaded verification document). Customer support told me I can upload verification documents with some parts covered, only name, date of birth and address must be shown, but the ID verification department rejected my uploaded document. So I forwarded the email from customer support to the ID verification department, then they passed my ID verification. Funny! There is one more detail make me more concern about my private information. The first email from the ID verification department was written in Simplified Chinese to inform me about failed verification, this make me think JShoppers outsourced the ID verification to China company. Anyway, I wrote so much, just to say JShoppers is not doing good to make customers feel safe about their private information.</p>

<p>The waiting time for this forward service is long, because they are seeing large amount of package recently. My packaged delivered to JShoppers on 10 Nov, only been processed on 15 Nov, and notify me to pay forwarding fee on 17 Nov, after that, the speed was fast: shipment was on 18 Nov and delivered to me on 19 Nov.</p>

<p>Ok, let&rsquo;s forget about JShoppers, here comes the exciting part, the HHKB. Amazon use a big box for the relatively small keyboard.
<img src="http://zhuyong.me/images/blogimg/2014-11-25-HHKB/HHKB-001.jpg" title="&#34;HHKB In Amazon's Huge Box&#34;" alt="&#34;HHKB In Amazon's Huge Box&#34;"></p>

<p>HHKB box
<img src="http://zhuyong.me/images/blogimg/2014-11-25-HHKB/HHKB-002.jpg" title="&#34;HHKB In Box&#34;" alt="&#34;HHKB In Box&#34;"></p>

<p>HHKB box opened
<img src="http://zhuyong.me/images/blogimg/2014-11-25-HHKB/HHKB-003.jpg" title="&#34;HHKB In Box&#34;" alt="&#34;HHKB In Box&#34;"></p>

<p>HHKB connected to my chromebook.
<img src="http://zhuyong.me/images/blogimg/2014-11-25-HHKB/HHKB-004.jpg" title="&#34;HHKB Connected To Chromebook&#34;" alt="&#34;HHKB Connected To Chromebook&#34;"></p>

<p>I will write another blog later about how I feel it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MobaXterm Install Package to Persistent Root Direcotry]]></title>
    <link href="http://zhuyong.me/blog/2014/11/24/mobaxterm-install-package-to-persistent-root-direcotry/"/>
    <updated>2014-11-24T13:51:51+08:00</updated>
    <id>http://zhuyong.me/blog/2014/11/24/mobaxterm-install-package-to-persistent-root-direcotry</id>
    <content type="html"><![CDATA[<p><a href="http://mobaxterm.mobatek.net">MobaXterm</a> is a very good SSH and X-Windows client. I have being use the free portable personal version for quite a while. Its built-in X-Server is very handy and convenient for people like me to run remote GUI applications occasionally. From version 7.2, they added the <code>apt-get</code> like package manager: <code>MobApt Package Manager</code>, and added the option to set <code>persistent root</code> directory, so user can install their own cygwin package to this persistent root directory. This should be the most desirable feature for all personal edition users, with this feature, package upgrading and installation is within one&rsquo;s fingertips.</p>

<p>But at Version 7.2, when I tried use this <code>MobApt</code> to install <code>git</code>, after installation done, <code>git</code> command not recognized when I typed in shell. After checked the installation process, I found a lot of link to <code>git.exe</code> were not created successfully, so I manually created those links, and <code>git</code> command works, but this is a painful process.</p>

<p>Today, when I setup <code>MobaXterm</code> Vesion 7.3 on my laptop, I suddenly realized that maybe I should run <code>MobaXterm</code> as Administrator for it to create those links successfully. And when I did that, result shown that I was correct, everything installed nicely. Next, I went back to my desktop PC, the process didn&rsquo;t succeed, I think I need a fresh installation, so I deleted the whole persistent root folder and persistent home folder on my desktop PC and went through the whole process again. Bingo, <code>git</code> works like a charm. Why I didn&rsquo;t realized this when I use Version 7.2??</p>

<p>When I remove the persistent root folder in Windows 7, I say message that some file / folder can&rsquo;t be removed because of <code>Permission Denined</code>. After few seconds Google, solution is simple:</p>

<pre><code>takeown /r /f DRIVE:\PATH
icacls DRIVE:\PATH /grant USERNAME:F /T
</code></pre>

<p>To conclude, next time, I must run <code>MobaXterm</code> as Administrator to install any new package or upgrade existing packages.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fix Git Connection Problem Over HTTPS in MobaXterm]]></title>
    <link href="http://zhuyong.me/blog/2014/06/26/fix-git-connection-problem-over-https-in-mobaxterm/"/>
    <updated>2014-06-26T11:12:10+08:00</updated>
    <id>http://zhuyong.me/blog/2014/06/26/fix-git-connection-problem-over-https-in-mobaxterm</id>
    <content type="html"><![CDATA[<p><a href="http://mobaxterm.mobatek.net/">MobaXterm</a> is a very nice portable ssh client as well as UNIX environment on Windows system. It has a lot of useful utilities including Xserver bundled into one single exe file. Recently I use it as my primary terminal on Windows system. But when I use the git plugin to clone / push my github repository, it first give me error of cert file not found, so I follow online instruction to set the root cert file in <code>~/.gitconfig</code> file to add following lines:</p>

<pre><code>[http]
    sslcainfo = c:/msysgit/mingw/bin/curl-ca-bundle.crt
</code></pre>

<p>This tells <code>git</code> to use the root cert file from <code>msysgit</code>, but next I saw new error messages:</p>

<pre><code>*   CAfile: c:/msysgit/mingw/bin/curl-ca-bundle.crt
CApath: none

***

error: The requested URL returned error: 403 Forbidden while accessing 
</code></pre>

<p>After tried with several solutions from Google search results, I found the solution provided by <a href="https://help.github.com/articles/generating-ssh-keys">GitHub</a> solved my problem. The solution is simple, use SSH to replace the HTTPS connection. Below are the steps:</p>

<p>First, generate SSH key:</p>

<pre><code>$ ssh-keygen -t rsa -b 2048 -N ""
</code></pre>

<p>Next copy content from <code>~/.ssh/id_rsa.pub</code>, cdd public key to github account,</p>

<pre><code>$ cat ~/.ssh/id_rsa.pub
</code></pre>

<p>Next, change the repository remote:</p>

<pre><code>$ git remote set-url origin git@github.com:yongzhy/vimconfig.git
</code></pre>

<p>Now it&rsquo;s DONE.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C Code Unit Testing Using Cmocka]]></title>
    <link href="http://zhuyong.me/blog/2014/03/19/c-code-unit-testing-using-cmocka/"/>
    <updated>2014-03-19T16:22:53+08:00</updated>
    <id>http://zhuyong.me/blog/2014/03/19/c-code-unit-testing-using-cmocka</id>
    <content type="html"><![CDATA[<p><a href="http://cmocka.org/">cmocka</a> is a unit testing framework for C, it is developed based on Google&rsquo;s project <a href="https://code.google.com/p/cmockery/">cmockery</a>. It was easy to use, and the author corrected some bugs from <code>cmockery</code>.</p>

<h3>Install cmocka</h3>

<p>First download source code for latest version of <code>cmocka</code> from <a href="https://open.cryptomilk.org/projects/cmocka/files">https://open.cryptomilk.org/projects/cmocka/files</a>. Current latest version is 0.3.2, and the source file is <code>cmocka-0.3.2.tar.xz</code>. <code>cmake</code> is required to build <code>cmocka</code>.</p>

<pre><code>$ cd ~/Downloads
$ xz -d cmocka-0.3.2.tar.xz
$ tar vxf cmocka-0.3.2.tar
$ cd cmocka-0.3.2
$ mkdir build
$ cd build
$ cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release ..
$ make
$ sudo make install
</code></pre>

<h3>Use cmocka</h3>

<p>Create source file with test cases. Simple example would be like:</p>

<pre><code>#include &lt;stdarg.h&gt;
#include &lt;stddef.h&gt;
#include &lt;setjmp.h&gt;
#include &lt;cmocka.h&gt;
static void test(void **state)
{
    assert_int_equal(3, 3);
    assert_int_not_equal(3, 3);
}
int main(void) 
{
    const UnitTest tests[] = 
    {
        unit_test(test),
    };
    return run_tests(tests);
}
</code></pre>

<p>save file as `cmockatest.c</p>

<pre><code>$ gcc cmockatest.c -lcmocka -o cmockatest
$ ./cmockatest

[==========] Running 1 test(s).
[ RUN      ] test
3 == 3
cmocka.c:8: error: Failure!
[  FAILED  ] test
[==========] 1 test(s) run.
[  PASSED  ] 0 test(s).
[  FAILED  ] 1 test(s), listed below:
[  FAILED  ] test
</code></pre>

<h3>Reference</h3>

<ul>
<li><a href="https://blog.cryptomilk.org/2013/01/14/cmocka-a-unit-testing-framework-for-c/">cmocka author&rsquo;s blog post</a></li>
<li><a href="https://lwn.net/Articles/558106/">Unit testing with mock objects in C</a></li>
<li><a href="http://www.cmocka.org/api/">cmocka API Documents</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hack YouCompleteMe and Libclang for Lamely Structured Project]]></title>
    <link href="http://zhuyong.me/blog/2014/02/20/hack-youcompleteme-and-libclang-for-lamely-structured-project/"/>
    <updated>2014-02-20T17:23:59+08:00</updated>
    <id>http://zhuyong.me/blog/2014/02/20/hack-youcompleteme-and-libclang-for-lamely-structured-project</id>
    <content type="html"><![CDATA[<p>On 13 Feb 2014 I asked a question on <a href="http://stackoverflow.com/questions/21746668/configure-vim-youcompleteme-for-special-project-structure">StackOverflow</a> on how to configure / modify vim plugin <code>YouCompleteMe</code> to fit special project structure. I guess my project structure is really lame, after two days waiting, some comments were given, but my problem not realy addressed. So I think I have to <strong>DO IT MYSELF</strong>. Then I read the source code for <code>YouComeplteMe</code> as well as <code>libclang</code>, because I only need the code completion function, lucky the related code are not much. Then I done  experiments with different approaches, and today, finally, I had my hacking works. Then I think I should record this nice experience, that&rsquo;s the purpose of this blog post.</p>

<h3>My Question On StackOverflow</h3>

<p>My C project has following structures. This is the structure for a large project, I can&rsquo;t change the structure. I want to use YouCompleteMe for semantic code completion for this project.</p>

<pre><code>main/                     // folder for C file to be compiled
  |- module1.c            // module main C file.
  |- module2.c
  |- .....
module1/
  |- mod1_func1.c         // function file to be included in main module C file.
  |- mod1_func2.c
  |- mod2_func3.c
module2/
  |- mod2_func1.c
  |- mod2_func2.c
  |- mod2_func3.c
</code></pre>

<p>Content for <code>moduleX.c</code>, this will include all related header files and module related C files.</p>

<pre><code>#include "header1.h"
#include "header2.h"
...
#include "modX_func1.c"
#include "modX_func2.c"
</code></pre>

<p>Content for <code>modX_funcX.c</code> has one or few function definitions. Doesn&rsquo;t have header included</p>

<pre><code>// no header file included here
int modX_funcX(void) {.....}
</code></pre>

<p>Because there is not related header included, <code>clang</code> must parse <code>moduleX.c</code> in order to do code completion on <code>modX_funcX.c</code>,  I have tried <code>clang</code> code completion from command line. Command below works</p>

<pre><code>clang -cc1 -x c -fsyntax-only -code-completion-at mod1_func1.c:4:11 module1.c 
</code></pre>

<p>So my question: how to configure YouCompleteMe to do code completion when I edit the <code>modX_funcX.c</code> file?</p>

<p>I guess modification to YouCompleteMe source might required to do this job. My current idea is to add a file mapping database with format:</p>

<pre><code>path_of_file_to_complete:path_of_file_for_clang_to_parse
</code></pre>

<p>So before send the code completion request, get <code>path_of_file_for_clang_to_parse</code> from database based on current buffer name, pass this file name to <code>libclang</code>.</p>

<p>Is my idea workable? If Yes, where is exactly place to add this file mapping function?</p>

<!-- more -->


<h3>My Analysis</h3>

<p>To make job easy, I make a simple project structure to simulate my rare project structure.</p>

<pre><code>$ cd ~/dev/c/clang
$ ls
a.c  a.h  b.c  b.h  c.c  c.h  main.c
</code></pre>

<p>content for <code>a.h</code></p>

<pre><code>typedef struct A {
    struct A * next;
    unsigned int data;
}A;
</code></pre>

<p>content for <code>a.c</code></p>

<pre><code>int test(void)
{
    A *list;
    list-&gt;
}
</code></pre>

<p>content for <code>main.c</code></p>

<pre><code>#include "a.h"
#include "b.h"
#include "c.h"

#include "a.c"
#include "b.c"
#include "c.c"
</code></pre>

<p>My ultimate goal is to let <code>YouCompleteMe</code> to do code completion when I type <code>-&gt;</code> at line 4 of file <code>a.c</code>. To test with <code>clang</code> from command line</p>

<pre><code>$ clang -cc1 -x c -fsyntax-only -code-completion-at a.c:4:11 main.c
COMPLETION: data : [#unsigned int#]data
COMPLETION: next : [#struct A *#]next
</code></pre>

<h4>Analyze clang Command Line</h4>

<p>So command line code completion works for this simulation structure. To understand why <code>clang</code> CLI works while <code>YouCompleteMe</code> doesn&rsquo;t, I need to find the difference at the point of code completetion for CLI and <code>libclang</code>. So I need a debug version of <code>clang</code>. Below are the steps to download and build debug version of <code>clang</code> version 3.3.</p>

<pre><code>$ mkdir -p /data/sourcecode
$ svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_33/final llvm3.3
$ cd llvm3.3/tools
$ svn co http://llvm.org/svn/llvm-project/cfe/tags/RELEASE_33/final clang
$ cd ../projects
$ svn co http://llvm.org/svn/llvm-project/compiler-rt/tags/RELEASE_33/final compiler-rt
$ cd /data/build
$ mkdir llvm3.3-linux
$ cd llvm3.3-linux
$ /data/sourcecode/llvm3.3/configure --prefix=/data/software/C-C++/llvm3.3-hack/ CC=/usr/bin/gcc CXX=/usr/bin/g++
$ make -j4
$ make install
</code></pre>

<p>Next step is to load debug version of <code>clang</code> with the working arguments. I want to break at function <code>ASTFrontendAction::ExecuteAction()</code> to check some variables.</p>

<pre><code>$ gdb --args /data/software/C-C++/llvm3.3-hack/bin/clang -cc1 -x c -fsyntax-only -code-completion-at a.c:4:11 main.c

(gdb) break z:\sourcecode\llvm3.3\tools\clang\lib\frontend\frontendaction.cpp:457

Breakpoint 1 at 0xd775d3: file /data/sourcecode/llvm3.3/tools/clang/lib/Frontend/FrontendAction.cpp, line 457.

(gdb) run

Starting program: /data/software/C-C++/llvm3.3-hack/bin/clang -cc1 -x c -fsyntax-only -code-completion-at a.c:4:11 main.c
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Breakpoint 1, clang::ASTFrontendAction::ExecuteAction (this=0x513a5d0) at /data/sourcecode/llvm3.3/tools/clang/lib/Frontend/FrontendAction.cpp:457
457       if (hasCodeCompletionSupport() &amp;&amp;

(gdb) print CI.getFrontendOpts().Inputs[0]

$3 = (clang::FrontendInputFile &amp;) @0x513b600: {File = {static npos = &lt;optimized out&gt;, _M_dataplus = {&lt;std::allocator&lt;char&gt;&gt; = {&lt;__gnu_cxx::new_allocator&lt;char&gt;&gt; = {&lt;No data fields&gt;}, &lt;No data fields&gt;}, _M_p = 0x513b5e8 "main.c"}},
Buffer = 0x0, Kind = clang::IK_C, IsSystem = false}

(gdb) print CI.getFrontendOpts().CodeCompletionAt

$4 = {FileName = {static npos = &lt;optimized out&gt;, _M_dataplus = {&lt;std::allocator&lt;char&gt;&gt; = {&lt;__gnu_cxx::new_allocator&lt;char&gt;&gt; = {&lt;No data fields&gt;}, &lt;No data fields&gt;}, _M_p = 0x513b568 "a.c"}}, Line = 4, Column = 11}
</code></pre>

<p>From <code>gdb</code> output, I know <code>a.c</code> is stored in <code>CI.getFrontendOpts().CodeCompletionAt</code> while <code>main.c</code> is stored in <code>CI.getFrontendOpts().Inputs[0]</code></p>

<h4>Analyze YouCompleteMe with libclang</h4>

<p>Entry point for code completion from <code>libclang</code> is <code>clang_codeCompleteAt</code> and eventually it call to <code>ASTUnit::CodeComplete()</code>. And at end of this function, it also call <code>ASTFrontendAction::ExecuteAction()</code> same as <code>clang</code> from command line. It also has input file defined by <code>Clang-&gt;getFrontendOpts().Inputs[0]</code>. Up to this point, my thought become clear, my target is how to make <code>Clang-&gt;getFrontendOpts().Inputs[0]</code> set to <code>main.c</code> with all the passed in parameters.</p>

<h3>My Hacking</h3>

<h4>The First Fail Hack</h4>

<p>My first attemp is rather simple, as I stated in my <a href="http://stackoverflow.com/questions/21746668/configure-vim-youcompleteme-for-special-project-structure">StackOverflow question</a>. When call <code>clang_codeCompleteAt()</code>, pass <code>complete_filename</code> in form of <code>path_of_file_to_complete:path_of_file_for_clang_to_parse</code>. This attempt failed because it won&rsquo;t even run to the point of <code>ASTUnit::CodeComplete()</code>. Along the calling path, there are other function check and parse the input file, my hacking filename format is an invalid filename for those functions.</p>

<h4>The Second Fail Hack</h4>

<p>I understand that <code>Clang-&gt;getFrontendOpts()</code> is parsed from the passed flags, so my second attempt of hacking is to pass <code>main.c</code> together with flags. So I hardcode <code>.ycm_extra_conf.py</code> to append absolute path of <code>main.c</code> in <code>flags</code>, but <code>Clang-&gt;getFrontendOpts().Inputs[0]</code> was not set to <code>main.c</code> when I check at <code>ASTUnit::CodeComplete()</code>. So this attempt failed.</p>

<h4>The Third Successful But Dirty Hack</h4>

<p>After failed previous two attempts, I only have the option to do dirty hacking by change <code>libclang</code> API and related functions, as well as related parts in <code>YouComplteMe</code>. The idea was to pass in additional <code>input_filename</code> together with <code>complete_filename</code>. And at <code>ASTUnit::CodeComplete()</code>, if this <code>input_filename</code> is valid, use it to replace <code>Clang-&gt;getFrontendOpts().Inputs[0]</code>. This attempt works!!!</p>

<h3>Conclusion</h3>

<p>To solve my problem, I was forced to read source code of <code>YouCompleteMe</code> and <code>clang</code>. The hacking process takes time because of code reading, compilation and debugging, and it&rsquo;s disappointed to find out my attempt didn&rsquo;t work as expected. But I really enjoy the moment when the code worked after some days&#8217; struggling. This whole hacking process is just another proof that open source is really good, you can do any hacking to fit your own need.</p>

<h3>Update 2015-02-01</h3>

<p>I have tried another hacking, a better hacking, click <a href="http://zhuyong.me/blog/2015/02/01/hacked-youcompleteme-to-support-lamely-structured-pojects/">here</a> for more info.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DARPA Published Over 60 Projects Source Code in One Place]]></title>
    <link href="http://zhuyong.me/blog/2014/02/12/darpa-published-over-60-projects-source-code-in-one-place/"/>
    <updated>2014-02-12T17:29:59+08:00</updated>
    <id>http://zhuyong.me/blog/2014/02/12/darpa-published-over-60-projects-source-code-in-one-place</id>
    <content type="html"><![CDATA[<p>The Defense Advanced Research Projects Agency, or DARPA, sponsors a lot of technology through grants to universities and private lab, has published <a href="http://www.darpa.mil/OpenCatalog/index.html">DARPA Open Catalog</a> which listed over 60 opensource projects. Chris White, the DARPA program manager behind the effort, said</p>

<blockquote><p>&ldquo;Making our open source catalog available increases the number of experts who can help quickly develop relevant software for the government. Our hope is that the computer science community will test and evaluate elements of our software and afterward adopt them as either standalone offerings or as components of their products.&rdquo;</p></blockquote>

<p>The DARPA Open Catalog contains two tables:</p>

<ul>
<li>The Software Table lists performers with one row per piece of software. Each piece of software has a link to an external project page, as well as a link to the code repository for the project. The software categories are listed; in the case of XDATA, they are Analytics, Visualization and Infrastructure. A description of the project is followed by the applicable software license. Finally, each entry has a link to the publications from each team&rsquo;s software entry.</li>
<li>The Publications Table contains author(s), title, and links to peer-reviewed articles related to specific DARPA programs.</li>
</ul>

]]></content>
  </entry>
  
</feed>
